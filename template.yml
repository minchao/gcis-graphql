AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Parameters:

  ParamStackName:
    Type: String
    Default: gcis-graphql
  ParamENV:
    Type: String
  ParamGCISBaseURL:
    Type: String
    Default: ""
    AllowedValues:
      - ""
      - "http://data.gcis.nat.gov.tw/"
      - "https://data.gcis.nat.gov.tw/"

Resources:

  Lambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build/
      Handler: handler
      Runtime: go1.x
      MemorySize: 128
      Timeout: 10
      Environment:
        Variables:
          GCIS_BASE_URL: !Ref ParamGCISBaseURL

  AppSync:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: !Join [ -, [ !Ref ParamStackName, !Ref ParamENV ] ]
      AuthenticationType: API_KEY

  AppSyncKey:
    Type: AWS::AppSync::ApiKey
    Properties:
      ApiId: !GetAtt [ AppSync, ApiId ]

  AppSyncRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: allow-access-to-lambda-from-appsync
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: lambda:invokeFunction
                Resource:
                  - !GetAtt [ Lambda, Arn ]
                  - !Join [ '', [ !GetAtt [ Lambda, Arn ], ':*' ] ]

  AppSyncSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId: !GetAtt [ AppSync, ApiId ]
      DefinitionS3Location: schema.graphql

  AppSyncDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: !GetAtt [ AppSync, ApiId ]
      Name: handler
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn: !GetAtt [ Lambda, Arn ]
      ServiceRoleArn: !GetAtt [ AppSyncRole, Arn ]

  AppSyncResolverCompany:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !GetAtt [ AppSync, ApiId ]
      TypeName: Query
      FieldName: company
      DataSourceName: !GetAtt [ AppSyncDataSource, Name ]
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.company", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: $util.toJson($context.result)

  AppSyncResolverSearch:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !GetAtt [ AppSync, ApiId ]
      TypeName: Query
      FieldName: search
      DataSourceName: !GetAtt [ AppSyncDataSource, Name ]
      RequestMappingTemplate: '{ "version" : "2017-02-28", "operation": "Invoke", "payload": { "resolve": "query.search", "context": $utils.toJson($context) } }'
      ResponseMappingTemplate: $util.toJson($context.result)

Outputs:

  GraphQL:
    Description: GraphQL URL
    Value: !GetAtt [ AppSync, GraphQLUrl ]

  APIKey:
    Description: API Key
    Value: !GetAtt [ AppSyncKey, ApiKey ]
